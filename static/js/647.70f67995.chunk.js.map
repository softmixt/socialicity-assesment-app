{"version":3,"file":"static/js/647.70f67995.chunk.js","mappings":"gNAIaA,EAAiB,kBAAMC,EAAAA,EAAAA,OACvBC,EAAkDC,EAAAA,I,4JCW/D,SAASC,EAAT,GAA6C,IAAdC,EAAa,EAAbA,KACvBC,GAAWN,EAAAA,EAAAA,KACjB,GAAsCO,EAAAA,EAAAA,WAAkB,GAAxD,eAAOC,EAAP,KAAoBC,EAApB,KAaA,OAXAC,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAYC,YAAW,WAC3BH,GAAe,GACfI,aAAaF,KACZ,KAEH,OAAO,WACLE,aAAaF,MAEd,CAACH,KAGF,iBAAKM,UAAU,wDAAf,WACE,UAAC,KAAD,CAASC,GAAE,+BAA0BV,EAAKW,IAAMF,UAAU,8BAA1D,WACE,cAAGA,UAAU,yBACZ,QAEH,UAAC,KAAD,CAASC,GAAE,+BAA0BV,EAAKW,IAAMF,UAAU,8BAA1D,WACE,cAAGA,UAAU,oBACZ,QAGDN,IACF,oBAAQS,KAAK,SAASH,UAAU,6BAA6BI,QAAS,kBAAMT,GAAe,IAA3F,WACE,cAAGK,UAAU,0BACZ,OAIFN,IACD,oBAAQS,KAAK,SAASH,UAAU,6BAA6BI,QAAS,kBAAMZ,GAASa,EAAAA,EAAAA,IAAWd,EAAKW,MAArG,WACE,cAAGF,UAAU,0BACZ,IAFH,gBAWS,SAASM,IACtB,IAAMC,GAAUC,EAAAA,EAAAA,UAGhB,GAA8Bf,EAAAA,EAAAA,YAA9B,eAAOgB,EAAP,KAAgBC,EAAhB,KAEA,GAAoCjB,EAAAA,EAAAA,UAAS,CAC3C,CACEkB,MAAO,KACPC,OAAQ,sBAEV,CACED,MAAO,aACPC,OAAQ,sBAEV,CACED,MAAO,YACPC,OAAQ,sBAEV,CACED,MAAO,QACPC,OAAQ,sBAEV,CACEC,WAAY,UACZF,MAAO,UACPG,UAAU,EACVF,QAAQ,EACRG,aAAczB,KAtBlB,eAAO0B,EAAP,KA4BMC,GA5BN,MA4Bc7B,EAAAA,EAAAA,GAAe8B,EAAAA,KAEvBC,GAAiBC,EAAAA,EAAAA,UAAQ,iBAAO,CACpCC,OAAQ,QACRC,MAAO,UACL,IAEEC,GAAgBH,EAAAA,EAAAA,UAAQ,iBAAO,CACnCN,UAAU,EACVF,QAAQ,EACRY,WAAW,EACXC,gBAAgB,KACd,IAEEC,GAAsBC,EAAAA,EAAAA,cAAY,SAACC,GACvCrB,EAAQsB,QAAQC,IAAIC,qBACnB,IAMH,OAJAnC,EAAAA,EAAAA,YAAU,WACRc,EAAWO,KACV,CAACA,KAGF,gBAAKjB,UAAU,uCAAuCgC,MAAOb,EAA7D,UACE,SAAC,EAAAc,YAAD,CACEC,IAAK3B,EACLE,QAASA,EACTO,WAAYA,EACZmB,gBAAc,EACdC,iBAAe,EACfb,cAAeA,EACfc,aAAW,EACXC,YAAU,EACVC,mBAAoB,EACpBC,wBAAsB,EACtBd,oBAAqBA,MC7Hd,SAASe,EAAcC,GACpC,OACE,iBAAK1C,UAAU,MAAf,WAEE,gBAAKA,UAAU,2DAAf,UAEE,UAAC,KAAD,CAASC,GAAG,sBAAsBD,UAAU,wCAA5C,WACE,cAAGA,UAAU,0BACZ,IAFH,iBAOF,SAACM,EAAD","sources":["app/hooks.ts","parts/users/ListUsers.tsx","pages/customer/users/UsersListPage.tsx"],"sourcesContent":["import { TypedUseSelectorHook, useDispatch, useSelector } from 'react-redux';\nimport type { RootState, AppDispatch } from 'state/store';\n\n// Use throughout your app instead of plain `useDispatch` and `useSelector`\nexport const useAppDispatch = () => useDispatch<AppDispatch>();\nexport const useAppSelector: TypedUseSelectorHook<RootState> = useSelector;\n","import React, {\n  useCallback,\n  useEffect, useMemo, useRef, useState,\n} from 'react';\nimport 'ag-grid-community/dist/styles/ag-grid.css';\nimport 'ag-grid-community/dist/styles/ag-theme-alpine.css';\n\nimport { AgGridReact } from 'ag-grid-react';\n\nimport { useAppDispatch, useAppSelector } from 'app/hooks';\nimport {\n  deleteUser,\n  selectUsers,\n} from 'state/users/usersSlice';\nimport { NavLink } from 'react-router-dom';\n\nfunction ActionsCellRenderer({ data }: any) {\n  const dispatch = useAppDispatch();\n  const [showConfirm, setShowConfirm] = useState<boolean>(false);\n\n  useEffect(() => {\n    const myTimeout = setTimeout(() => {\n      setShowConfirm(false);\n      clearTimeout(myTimeout);\n    }, 3000);\n\n    return () => {\n      clearTimeout(myTimeout);\n    };\n  }, [showConfirm]);\n\n  return (\n    <div className=\"d-flex justify-content-start align-items-center h-100\">\n      <NavLink to={`/customer/users/edit/${data.id}`} className=\"btn btn-sm btn-primary mx-2\">\n        <i className=\"fa-solid fa-user-pen\" />\n        {' '}\n      </NavLink>\n      <NavLink to={`/customer/users/view/${data.id}`} className=\"btn btn-sm btn-warning mx-2\">\n        <i className=\"fa-solid fa-eye\" />\n        {' '}\n      </NavLink>\n\n      {!showConfirm && (\n      <button type=\"button\" className=\"btn btn-sm btn-danger mx-2\" onClick={() => setShowConfirm(true)}>\n        <i className=\"fa-solid fa-trash-can\" />\n        {' '}\n      </button>\n      )}\n\n      {showConfirm && (\n      <button type=\"button\" className=\"btn btn-sm btn-danger mx-2\" onClick={() => dispatch(deleteUser(data.id))}>\n        <i className=\"fa-solid fa-trash-can\" />\n        {' '}\n        Confirm\n      </button>\n      )}\n\n    </div>\n  );\n}\n\nexport default function ListUsers() {\n  const gridRef = useRef<any>();\n\n  // States ...\n  const [rowData, setRowData] = useState<any>();\n\n  const [columnDefs, setColumnDefs] = useState([\n    {\n      field: 'id',\n      filter: 'agTextColumnFilter',\n    },\n    {\n      field: 'first_name',\n      filter: 'agTextColumnFilter',\n    },\n    {\n      field: 'last_name',\n      filter: 'agTextColumnFilter',\n    },\n    {\n      field: 'email',\n      filter: 'agTextColumnFilter',\n    },\n    {\n      headerName: 'Actions',\n      field: 'actions',\n      sortable: false,\n      filter: false,\n      cellRenderer: ActionsCellRenderer,\n    },\n\n  ]);\n\n  // Selectors ...\n  const users = useAppSelector(selectUsers);\n\n  const containerStyle = useMemo(() => ({\n    height: '25rem',\n    width: '100%',\n  }), []);\n\n  const defaultColDef = useMemo(() => ({\n    sortable: true,\n    filter: true,\n    resizable: true,\n    floatingFilter: true,\n  }), []);\n\n  const onFirstDataRendered = useCallback((params) => {\n    gridRef.current.api.sizeColumnsToFit();\n  }, []);\n\n  useEffect(() => {\n    setRowData(users);\n  }, [users]);\n\n  return (\n    <div className=\"container-fluid ag-theme-alpine pb-3\" style={containerStyle}>\n      <AgGridReact\n        ref={gridRef}\n        rowData={rowData}\n        columnDefs={columnDefs}\n        rowDragManaged\n        rowDragMultiRow\n        defaultColDef={defaultColDef}\n        animateRows\n        pagination\n        paginationPageSize={5}\n        paginationAutoPageSize\n        onFirstDataRendered={onFirstDataRendered}\n      />\n    </div>\n  );\n}\n","import React from 'react';\n\nimport ListUsers from 'parts/users/ListUsers';\nimport { NavLink } from 'react-router-dom';\n\nexport default function UsersListPage(props: any) {\n  return (\n    <div className=\"row\">\n\n      <div className=\"w-100 d-flex flex-column flex-md-row justify-content-end\">\n\n        <NavLink to=\"/customer/users/new\" className=\"btn btn-sm btn-outline-secondary mb-3\">\n          <i className=\"fa-solid fa-user-plus\" />\n          {' '}\n          New User\n        </NavLink>\n\n      </div>\n      <ListUsers />\n    </div>\n  );\n}\n"],"names":["useAppDispatch","useDispatch","useAppSelector","useSelector","ActionsCellRenderer","data","dispatch","useState","showConfirm","setShowConfirm","useEffect","myTimeout","setTimeout","clearTimeout","className","to","id","type","onClick","deleteUser","ListUsers","gridRef","useRef","rowData","setRowData","field","filter","headerName","sortable","cellRenderer","columnDefs","users","selectUsers","containerStyle","useMemo","height","width","defaultColDef","resizable","floatingFilter","onFirstDataRendered","useCallback","params","current","api","sizeColumnsToFit","style","AgGridReact","ref","rowDragManaged","rowDragMultiRow","animateRows","pagination","paginationPageSize","paginationAutoPageSize","UsersListPage","props"],"sourceRoot":""}